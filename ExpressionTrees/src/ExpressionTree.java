import java.util.Stack;

/**
 * Expression Tree
 * 
 * @author Sean Gibbons
 *
 */
public class ExpressionTree extends TreeNode implements Expressions {

	/**
	 * Creates an ExpressionTree using a String array
	 * 
	 * @param exp
	 */
	public ExpressionTree(String[] exp) {
		super("");
		TreeNode n = this.buildTree(exp);
		this.setLeft(n.getLeft());
		this.setRight(n.getRight());
		this.setValue(n.getValue());
	}

	/**
	 * Creates an ExpressionTree using the superclass constructor
	 * 
	 * @param initValue
	 *            the value for the root of the ExpressionTree
	 * @param initLeft
	 *            the value for the left branch of the ExpressionTree
	 * @param initRight
	 *            the value for the right branch of the ExpressionTree
	 */
	public ExpressionTree(Object initValue, TreeNode initLeft, TreeNode initRight) {
		super(initValue, initLeft, initRight);
	}

	@Override
	public String toString() {
		return this.getValue().toString();
	}

	@Override
	public TreeNode buildTree(String[] exp) {
		Stack<TreeNode> stk = new Stack<TreeNode>();
		for (String str : exp) {
			if (!this.isOperation(str)) {
				stk.push(new TreeNode(Integer.parseInt(str)));
			} else {

				TreeNode right = new TreeNode(stk.pop());
				TreeNode left = new TreeNode(stk.pop());
				TreeNode node = new ExpressionTree(str, left, right);

				stk.push(node);
			}
		}
		return stk.pop();

	}

	/**
	 * A helper method that checks whether a String is a mathematical operation
	 * 
	 * @param s
	 *            the input to be checked
	 * @return whether a String is a mathematical operation
	 */
	private boolean isOperation(String s) {
		if (s.trim().equals("*") || s.trim().equals("+") || s.trim().equals("-") || s.trim().equals("/")
				|| s.trim().equals("%")) {
			return true;
		} else
			return false;
	}

	/**
	 * A helper method that performs a mathematical operation given two integers and
	 * a String operation and returns the result
	 * 
	 * @param n1
	 *            the first number
	 * @param n2
	 *            the second number
	 * @param operation
	 *            the mathematical operation to be performed
	 * @return the resultant of performing the mathematical operation
	 */
	private int performOp(int n1, int n2, String operation) {
		switch (operation.trim()) {
		case "*":
			return n1 * n2;
		case "+":
			return n1 + n2;
		case "-":
			return n1 - n2;
		case "/":
			if (n2 != 0)
				return n1 / n2;
			else
				throw new IllegalArgumentException("Cannot divide by 0\n\n" + getMsg());
		case "%":
			return n1 % n2;

		default:
			return n1 + n2;
		}
	}

	@Override
	public int evalTree() {
		if (this.getLeft() == null || this.getRight() == null) {
			return Integer.parseInt(this.getValue().toString());
		} else {
			return performOp(((ExpressionTree) this.getLeft()).evalTree(),
					((ExpressionTree) this.getRight()).evalTree(), this.getValue().toString());
		}
	}

	@Override
	public String toPrefixNotation() {
		if (this.getLeft() == null || this.getRight() == null) {
			return this.toString();
		} else {
			return this.toString() + ((ExpressionTree) this.getLeft()).toPrefixNotation()
					+ ((ExpressionTree) this.getRight()).toPrefixNotation();
		}
	}

	@Override
	public String toInfixNotation() {
		if (this.getLeft() == null || this.getRight() == null) {
			return this.toString();
		} else {
			return "(" + ((ExpressionTree) this.getLeft()).toPrefixNotation() + (String) this.getValue()
					+ ((ExpressionTree) this.getRight()).toPrefixNotation() + ")";
		}
	}

	@Override
	public String toPostfixNotation() {
		if (this.getLeft() == null || this.getRight() == null) {
			return this.toString();
		} else {
			return ((ExpressionTree) this.getLeft()).toPostfixNotation()
					+ ((ExpressionTree) this.getRight()).toPostfixNotation() + this.toString();
		}
	}

	@Override
	public int postfixEval(String[] exp) {
		Stack<Integer> stk = new Stack<Integer>();
		for (String str : exp) {
			if (!this.isOperation(str)) {
				stk.push(Integer.parseInt(str));
			} else {
				stk.push(this.performOp(stk.pop(), stk.pop(), str));
			}
		}
		return stk.pop();

	}

	private static final String headerr\n"
			r\n"
			r\n"
			+ "       /::::\\    \\              /::::\\    \\           \\:::\\    \\           \\:::\\    \\              /::::\\    \\              /::::\\    \\                       \\:::\\    \\              /::::|   |               /::::\\    \\              /::::\\    \\              /::::\\    \\              /::::\\    \\               \\:::\\    \\              /::::\\    \\              /::::|   |            \\:::\\    \\              /::::\\    \\                      /::::\\    \\              /::::\\    \\           \\:::\\    \\           \\:::\\    \\              /::::\\    \\              /::::\\    \\                      /::::\\    \\              /::::\\    \\             /::::::\\    \\             /::::\\    \\              /::::\\    \\              /::::\\    \\              /::::|   |               /::::|   |                \\:::\\    \\              /::::|   |               /::::\\    \\       \r\n"
			+ "      /::::::\\    \\            /::::::\\    \\           \\:::\\    \\           \\:::\\    \\            /::::::\\    \\            /::::::\\    \\                       \\:::\\    \\            /:::::|   |              /::::::\\    \\            /::::::\\    \\            /::::::\\    \\            /::::::\\    \\               \\:::\\    \\            /::::::\\    \\            /:::::|   |             \\:::\\    \\            /::::::\\    \\                    /::::::\\    \\            /::::::\\    \\           \\:::\\    \\           \\:::\\    \\            /::::::\\    \\            /::::::\\    \\                    /::::::\\    \\            /::::::\\    \\           /::::::::\\    \\           /::::::\\    \\            /::::::\\    \\            /::::::\\    \\            /:::::|   |              /:::::|   |                 \\:::\\    \\            /:::::|   |              /::::::\\    \\      \r\n"
			+ "     /:::/\\:::\\    \\          /:::/\\:::\\    \\           \\:::\\    \\           \\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\                       \\:::\\    \\          /::::::|   |             /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\               \\:::\\    \\          /:::/\\:::\\    \\          /::::::|   |              \\:::\\    \\          /:::/\\:::\\    \\                  /:::/\\:::\\    \\          /:::/\\:::\\    \\           \\:::\\    \\           \\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\                  /:::/\\:::\\    \\          /:::/\\:::\\    \\         /:::/~~\\:::\\    \\         /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\          /::::::|   |             /::::::|   |                  \\:::\\    \\          /::::::|   |             /:::/\\:::\\    \\     \r\n"
			+ "    /:::/__\\:::\\    \\        /:::/__\\:::\\    \\           \\:::\\    \\           \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\                       \\:::\\    \\        /:::/|::|   |            /:::/  \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\        /:::/  \\:::\\    \\               \\:::\\    \\        /:::/__\\:::\\    \\        /:::/|::|   |               \\:::\\    \\        /:::/__\\:::\\    \\                /:::/__\\:::\\    \\        /:::/__\\:::\\    \\           \\:::\\    \\           \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\                /:::/__\\:::\\    \\        /:::/__\\:::\\    \\       /:::/    \\:::\\    \\       /:::/  \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\        /:::/|::|   |            /:::/|::|   |                   \\:::\\    \\        /:::/|::|   |            /:::/  \\:::\\    \\    \r\n"
			+ "   /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\          /::::\\    \\          /::::\\    \\      /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\                      /::::\\    \\      /:::/ |::|   |           /:::/    \\:::\\    \\      /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\      /:::/    \\:::\\    \\              /::::\\    \\      /::::\\   \\:::\\    \\      /:::/ |::|   |               /::::\\    \\       \\:::\\   \\:::\\    \\              /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\          /::::\\    \\          /::::\\    \\      /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\              /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\     /:::/    / \\:::\\    \\     /:::/    \\:::\\    \\      /::::\\   \\:::\\    \\      /::::\\   \\:::\\    \\      /:::/ |::|   |           /:::/ |::|   |                   /::::\\    \\      /:::/ |::|   |           /:::/    \\:::\\    \\   \r\n"
			+ "  /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\        /::::::\\    \\        /::::::\\    \\    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\            ____    /::::::\\    \\    /:::/  |::|   | _____    /:::/    / \\:::\\    \\    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\    /:::/    / \\:::\\    \\    ____    /::::::\\    \\    /::::::\\   \\:::\\    \\    /:::/  |::|   | _____        /::::::\\    \\    ___\\:::\\   \\:::\\    \\            /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\        /::::::\\    \\        /::::::\\    \\    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\            /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\   /:::/____/   \\:::\\____\\   /:::/    / \\:::\\    \\    /::::::\\   \\:::\\    \\    /::::::\\   \\:::\\    \\    /:::/  |::|___|______    /:::/  |::|___|______    ____    /::::::\\    \\    /:::/  |::|   | _____    /:::/    / \\:::\\    \\  \r\n"
			+ " /:::/\\:::\\   \\:::\\ ___\\  /:::/\\:::\\   \\:::\\    \\      /:::/\\:::\\    \\      /:::/\\:::\\    \\  /:::/\\:::\\   \\:::\\    \\  /:::/\\:::\\   \\:::\\____\\          /\\   \\  /:::/\\:::\\    \\  /:::/   |::|   |/\\    \\  /:::/    /   \\:::\\ ___\\  /:::/\\:::\\   \\:::\\____\\  /:::/\\:::\\   \\:::\\    \\  /:::/    /   \\:::\\ ___\\  /\\   \\  /:::/\\:::\\    \\  /:::/\\:::\\   \\:::\\    \\  /:::/   |::|   |/\\    \\      /:::/\\:::\\    \\  /\\   \\:::\\   \\:::\\    \\          /:::/\\:::\\   \\:::\\ ___\\  /:::/\\:::\\   \\:::\\    \\      /:::/\\:::\\    \\      /:::/\\:::\\    \\  /:::/\\:::\\   \\:::\\    \\  /:::/\\:::\\   \\:::\\____\\          /:::/\\:::\\   \\:::\\____\\  /:::/\\:::\\   \\:::\\____\\ |:::|    |     |:::|    | /:::/    /   \\:::\\ ___\\  /:::/\\:::\\   \\:::\\____\\  /:::/\\:::\\   \\:::\\    \\  /:::/   |::::::::\\    \\  /:::/   |::::::::\\    \\  /\\   \\  /:::/\\:::\\    \\  /:::/   |::|   |/\\    \\  /:::/    /   \\:::\\ ___\\ \r\n"
			+ "/:::/__\\:::\\   \\:::|    |/:::/__\\:::\\   \\:::\\____\\    /:::/  \\:::\\____\\    /:::/  \\:::\\____\\/:::/__\\:::\\   \\:::\\____\\/:::/  \\:::\\   \\:::|    |        /::\\   \\/:::/  \\:::\\____\\/:: /    |::|   /::\\____\\/:::/____/  ___\\:::|    |/:::/  \\:::\\   \\:::|    |/:::/__\\:::\\   \\:::\\____\\/:::/____/     \\:::|    |/::\\   \\/:::/  \\:::\\____\\/:::/__\\:::\\   \\:::\\____\\/:: /    |::|   /::\\____\\    /:::/  \\:::\\____\\/::\\   \\:::\\   \\:::\\____\\        /:::/__\\:::\\   \\:::|    |/:::/__\\:::\\   \\:::\\____\\    /:::/  \\:::\\____\\    /:::/  \\:::\\____\\/:::/__\\:::\\   \\:::\\____\\/:::/  \\:::\\   \\:::|    |        /:::/  \\:::\\   \\:::|    |/:::/  \\:::\\   \\:::|    ||:::|____|     |:::|    |/:::/____/  ___\\:::|    |/:::/  \\:::\\   \\:::|    |/:::/  \\:::\\   \\:::\\____\\/:::/    |:::::::::\\____\\/:::/    |:::::::::\\____\\/::\\   \\/:::/  \\:::\\____\\/:: /    |::|   /::\\____\\/:::/____/  ___\\:::|    |\r\n"
			+ "\\:::\\   \\:::\\  /:::|____|\\:::\\   \\:::\\   \\::/    /   /:::/    \\::/    /   /:::/    \\::/    /\\:::\\   \\:::\\   \\::/    /\\::/   |::::\\  /:::|____|        \\:::\\  /:::/    \\::/    /\\::/    /|::|  /:::/    /\\:::\\    \\ /\\  /:::|____|\\::/   |::::\\  /:::|____|\\:::\\   \\:::\\   \\::/    /\\:::\\    \\     /:::|____|\\:::\\  /:::/    \\::/    /\\:::\\   \\:::\\   \\::/    /\\::/    /|::|  /:::/    /   /:::/    \\::/    /\\:::\\   \\:::\\   \\::/    /        \\:::\\   \\:::\\  /:::|____|\\:::\\   \\:::\\   \\::/    /   /:::/    \\::/    /   /:::/    \\::/    /\\:::\\   \\:::\\   \\::/    /\\::/   |::::\\  /:::|____|        \\::/    \\:::\\  /:::|____|\\::/   |::::\\  /:::|____| \\:::\\    \\   /:::/    / \\:::\\    \\ /\\  /:::|____|\\::/   |::::\\  /:::|____|\\::/    \\:::\\  /:::/    /\\::/    / ~~~~~/:::/    /\\::/    / ~~~~~/:::/    /\\:::\\  /:::/    \\::/    /\\::/    /|::|  /:::/    /\\:::\\    \\ /\\  /:::|____|\r\n"
			+ " \\:::\\   \\:::\\/:::/    /  \\:::\\   \\:::\\   \\/____/   /:::/    / \\/____/   /:::/    / \\/____/  \\:::\\   \\:::\\   \\/____/  \\/____|:::::\\/:::/    /          \\:::\\/:::/    / \\/____/  \\/____/ |::| /:::/    /  \\:::\\    /::\\ \\::/    /  \\/____|:::::\\/:::/    /  \\:::\\   \\:::\\   \\/____/  \\:::\\    \\   /:::/    /  \\:::\\/:::/    / \\/____/  \\:::\\   \\:::\\   \\/____/  \\/____/ |::| /:::/    /   /:::/    / \\/____/  \\:::\\   \\:::\\   \\/____/          \\:::\\   \\:::\\/:::/    /  \\:::\\   \\:::\\   \\/____/   /:::/    / \\/____/   /:::/    / \\/____/  \\:::\\   \\:::\\   \\/____/  \\/____|:::::\\/:::/    /          \\/_____/\\:::\\/:::/    /  \\/____|:::::\\/:::/    /   \\:::\\    \\ /:::/    /   \\:::\\    /::\\ \\::/    /  \\/____|:::::\\/:::/    /  \\/____/ \\:::\\/:::/    /  \\/____/      /:::/    /  \\/____/      /:::/    /  \\:::\\/:::/    / \\/____/  \\/____/ |::| /:::/    /  \\:::\\    /::\\ \\::/    / \r\n"
			+ "  \\:::\\   \\::::::/    /    \\:::\\   \\:::\\    \\      /:::/    /           /:::/    /            \\:::\\   \\:::\\    \\            |:::::::::/    /            \\::::::/    /                   |::|/:::/    /    \\:::\\   \\:::\\ \\/____/         |:::::::::/    /    \\:::\\   \\:::\\    \\       \\:::\\    \\ /:::/    /    \\::::::/    /            \\:::\\   \\:::\\    \\              |::|/:::/    /   /:::/    /            \\:::\\   \\:::\\    \\               \\:::\\   \\::::::/    /    \\:::\\   \\:::\\    \\      /:::/    /           /:::/    /            \\:::\\   \\:::\\    \\            |:::::::::/    /                    \\::::::/    /         |:::::::::/    /     \\:::\\    /:::/    /     \\:::\\   \\:::\\ \\/____/         |:::::::::/    /            \\::::::/    /               /:::/    /               /:::/    /    \\::::::/    /                   |::|/:::/    /    \\:::\\   \\:::\\ \\/____/  \r\n"
			+ "   \\:::\\   \\::::/    /      \\:::\\   \\:::\\____\\    /:::/    /           /:::/    /              \\:::\\   \\:::\\____\\           |::|\\::::/    /              \\::::/____/                    |::::::/    /      \\:::\\   \\:::\\____\\           |::|\\::::/    /      \\:::\\   \\:::\\____\\       \\:::\\    /:::/    /      \\::::/____/              \\:::\\   \\:::\\____\\             |::::::/    /   /:::/    /              \\:::\\   \\:::\\____\\               \\:::\\   \\::::/    /      \\:::\\   \\:::\\____\\    /:::/    /           /:::/    /              \\:::\\   \\:::\\____\\           |::|\\::::/    /                      \\::::/    /          |::|\\::::/    /       \\:::\\__/:::/    /       \\:::\\   \\:::\\____\\           |::|\\::::/    /              \\::::/    /               /:::/    /               /:::/    /      \\::::/____/                    |::::::/    /      \\:::\\   \\:::\\____\\    \r\n"
			+ "    \\:::\\  /:::/    /        \\:::\\   \\::/    /    \\::/    /            \\::/    /                \\:::\\   \\::/    /           |::| \\::/____/                \\:::\\    \\                    |:::::/    /        \\:::\\  /:::/    /           |::| \\::/____/        \\:::\\   \\::/    /        \\:::\\  /:::/    /        \\:::\\    \\               \\:::\\   \\::/    /             |:::::/    /    \\::/    /                \\:::\\  /:::/    /                \\:::\\  /:::/    /        \\:::\\   \\::/    /    \\::/    /            \\::/    /                \\:::\\   \\::/    /           |::| \\::/____/                        \\::/____/           |::| \\::/____/         \\::::::::/    /         \\:::\\  /:::/    /           |::| \\::/____/               /:::/    /               /:::/    /               /:::/    /        \\:::\\    \\                    |:::::/    /        \\:::\\  /:::/    /    \r\n"
			+ "     \\:::\\/:::/    /          \\:::\\   \\/____/      \\/____/              \\/____/                  \\:::\\   \\/____/            |::|  ~|                       \\:::\\    \\                   |::::/    /          \\:::\\/:::/    /            |::|  ~|               \\:::\\   \\/____/          \\:::\\/:::/    /          \\:::\\    \\               \\:::\\   \\/____/              |::::/    /      \\/____/                  \\:::\\/:::/    /                  \\:::\\/:::/    /          \\:::\\   \\/____/      \\/____/              \\/____/                  \\:::\\   \\/____/            |::|  ~|                               ~~                 |::|  ~|                \\::::::/    /           \\:::\\/:::/    /            |::|  ~|                    /:::/    /               /:::/    /               /:::/    /          \\:::\\    \\                   |::::/    /          \\:::\\/:::/    /     \r\n"
			+ "      \\::::::/    /            \\:::\\    \\                                                         \\:::\\    \\                |::|   |                        \\:::\\    \\                  /:::/    /            \\::::::/    /             |::|   |                \\:::\\    \\               \\::::::/    /            \\:::\\    \\               \\:::\\    \\                  /:::/    /                                 \\::::::/    /                    \\::::::/    /            \\:::\\    \\                                                         \\:::\\    \\                |::|   |                                                  |::|   |                 \\::::/    /             \\::::::/    /             |::|   |                   /:::/    /               /:::/    /               /:::/    /            \\:::\\    \\                  /:::/    /            \\::::::/    /      \r\n"
			+ "       \\::::/    /              \\:::\\____\\                                                         \\:::\\____\\               \\::|   |                         \\:::\\____\\                /:::/    /              \\::::/    /              \\::|   |                 \\:::\\____\\               \\::::/    /              \\:::\\____\\               \\:::\\____\\                /:::/    /                                   \\::::/    /                      \\::::/    /              \\:::\\____\\                                                         \\:::\\____\\               \\::|   |                                                  \\::|   |                  \\::/____/               \\::::/    /              \\::|   |                  /:::/    /               /:::/    /               /:::/    /              \\:::\\____\\                /:::/    /              \\::::/    /       \r\n"
			+ "        \\::/____/                \\::/    /                                                          \\::/    /                \\:|   |                          \\::/    /                \\::/    /                \\::/____/                \\:|   |                  \\::/    /                \\::/____/                \\::/    /                \\::/    /                \\::/    /                                     \\::/    /                        \\::/____/                \\::/    /                                                          \\::/    /                \\:|   |                                                   \\:|   |                   ~~                      \\::/____/                \\:|   |                  \\::/    /                \\::/    /                \\::/    /                \\::/    /                \\::/    /                \\::/____/        \r\n"
			+ "         ~~                       \\/____/                                                            \\/____/                  \\|___|                           \\/____/                  \\/____/                                           \\|___|                   \\/____/                  ~~                       \\/____/                  \\/____/                  \\/____/                                       \\/____/                          ~~                       \\/____/                                                            \\/____/                  \\|___|                                                    \\|___|                                                                     \\|___|                   \\/____/                  \\/____/                  \\/____/                  \\/____/                  \\/____/                                  \r\n"
			

	private static final String msg = " "
			+ "____  _   _  ____     ___  _____  ____  ____    ____  ____  _____  _  _  ____ \r\n"
			+ "(_  _)( )_( )( ___)   / __)(  _  )(  _ \\( ___)  (  _ \\(  _ \\(  _  )( )/ )( ___)\r\n"
			+ "  )(   ) _ (  )__)   ( (__  )(_)(  )(_) ))__)    ) _ < )   / )(_)(  )  (  )__) \r\n"
			+ " (__) (_) (_)(____)   \\___)(_____)(____/(____)  (____/(_)\\_)(_____)(_)\\_)(____)";

	public static String getMsg() {
		return msg;
	}

	public static String getHeader() {
		return header;
	}
}
